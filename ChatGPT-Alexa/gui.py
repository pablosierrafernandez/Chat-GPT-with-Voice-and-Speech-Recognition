
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

import threading
import tkinter
import chat
from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
btn=1

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\ajenj\Documents\GitHub\ChatAlexa\ChatGPT-Alexa\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)
# importamos cosas
import datetime
import speech_recognition as sr
import pyaudio as ptg
from imports.auth import * # * --> all
import openai
import pyttsx3
import sqlite3
############################## CENTINELA DE INICIO
openai.api_key=api_key
r=sr.Recognizer()
close = threading.Lock()
close=True

def chatear():
    global close
    conversation=""
    engine=pyttsx3.init()
    engine.setProperty('voice',0)
    engine.setProperty('rate',150)
    
    
    miConexion=sqlite3.connect("chat.bd")
    miCursor=miConexion.cursor()
    try:
        miCursor.execute("CREATE TABLE HISTORIAL(ID INTEGER PRIMARY KEY AUTOINCREMENT, PREGUNTA TEXT, RESPUESTA TEXT, FECHA DATETIME)")
    except:
        pass
    
    while(close):
            with sr.Microphone() as source:
                r.adjust_for_ambient_noise(source,duration=2)
                print("Escuchando...")
                audio=r.listen(source)
            try:
                text=str(r.recognize_google(audio,language=language_chat))
                
                entry_text2.set(text)
                conversation+="\Humano: "+text+"\nAI: "
                conversation=conversation.strip()
                response=openai.Completion.create(engine="text-davinci-003",prompt=conversation,temperature=0.9,max_tokens=150,top_p=1,frequency_penalty=0,presence_penalty=0.6, stop=["\n","Humano","AI"])
                
                answer=response.choices[0].text
                conversation+=answer
                entry_text1.set(answer)
                fecha=datetime.datetime.fromtimestamp(response.created).strftime('%H:%M:%S')
                print(f"AI ({fecha}): {answer}\n")
                engine.say(answer)
                engine.runAndWait()
                
                miCursor.execute("INSERT INTO HISTORIAL (PREGUNTA, RESPUESTA, FECHA) VALUES(?, ?, ?)",(text,answer,datetime.datetime.fromtimestamp(response.created)))
                
            except:
                print("No reconozco tu voz")
            
    
    miConexion.commit()
    miConexion.close()
    print("\nHasta prontoOOO!")
        
        
def empezar():
    global btn
    global close
    print("hola")
    if btn==1:
        close=True
        th=threading.Thread(target=chatear).start()
        btn=0
    else:
        close=False
        btn=1
        
        
window = Tk()

window.geometry("745x501")
window.configure(bg = "#F8F8F8")


canvas = Canvas(
    window,
    bg = "#F8F8F8",
    height = 501,
    width = 745,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_text(
    74.0,
    31.0,
    anchor="nw",
    text="Bienvenido a Chat-GPT & Alexa",
    fill="#1DA58D",
    font=("Inter Bold", 20 * -1)
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    485.0,
    176.5,
    image=entry_image_1
)
entry_text1 = tkinter.StringVar()
entry_1 = Entry(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0,
    textvariable=entry_text1
)
entry_1.place(
    x=309.0,
    y=108.0,
    width=352.0,
    height=135.0
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    485.0,
    361.5,
    image=entry_image_2
)
entry_text2 = tkinter.StringVar()
entry_2 = Entry(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0,
    textvariable=entry_text2
)
entry_2.place(
    x=309.0,
    y=293.0,
    width=352.0,
    height=135.0
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    126.0,
    176.0,
    image=image_image_1
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=empezar,
    relief="flat"
)
button_1.place(
    x=69.0,
    y=308.0,
    width=108.0,
    height=108.0
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    123.0,
    361.0,
    image=image_image_2
)
window.resizable(False, False)
window.mainloop()
